(()=>{var n,e=3553,t=36160;function r(e,t){let r=`#version 300 es\nprecision highp float;\n${t}`;const o=n.createShader(e);n.shaderSource(o,r),n.compileShader(o);{const e=n.getShaderInfoLog(o);e&&(console.log("shader:",e),console.log(r.split("\n").map(((n,e)=>`${e+1}. ${n}`)).join("\n")))}return o}function o(e,t){var r=n.createProgram();return n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),r}var a=[5121,6408],c=[5123,6402,33189];function i(){n.drawArrays(4,0,6)}function x(e){const t={};for(let r=0;r<n.getProgramParameter(e,n.ACTIVE_UNIFORMS);++r){const o=n.getActiveUniform(e,r);let a=["i","ui","f"][o.type-5124]||"i";const c=n.getUniformLocation(e,o.name);t[o.name]=(...e)=>n[`uniform${e.length}${a}`](c,...e)}return t}var f,v="uniform float t;\nlayout(location = 0) out vec4 c0;\nlayout(location = 1) out vec4 c1;\nvoid main() {\n  float v = fbm(gl_FragCoord.xy / 50. + vec2(0, t * 10.));\n  c0 = vec4(0, v, 0, 1);\n  float w = fbm(gl_FragCoord.xy / 200. + vec2(0, t * 10.)) - 0.5;\n  w = .5 / (1. + w * w * 4e2);\n  c1 = vec4(0, w, 0, 1);\n  gl_FragDepth = 0.3;\n}\n",m="int NUM_OCTAVES = 10;\n\n\n// 1,2,3\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\n\n/*\n// Simplex\n\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat noise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 0.5 + 130.0 * dot(m, g) * 0.5;\n}\n*/\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n  mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.6;\n\t}\n\treturn v;\n}\n",l="uniform sampler2D T0;\nuniform sampler2D T1;\nuniform sampler2D Depth;\nout vec4 c;\nvoid main() {\n  ivec2 F = ivec2(gl_FragCoord.xy);\n  c = vec4(texelFetch(T0, F, 0).g, texelFetch(T1, F, 0).g, texelFetch(Depth, F, 0).r*1., 1.);\n  c.a = 1.;\n}";(f=16,[...new Array(f)].map(((n,e)=>e))).map((n=>n%5?0:1));console.log("mset",((n,e)=>{n=[...n];for(let t in e)n[t]=e[t];return n})([1,2,3],{1:5}));var u;C.width=800,C.height=800,u=C,(n=u.getContext("webgl2")).enable(2929),n.getExtension("EXT_color_buffer_float");var s=r(35633,"\nvoid main() {\n  int i = gl_VertexID;\n  gl_Position = vec4(i%2*2-1, 1-(i+1)%4/2*2, float(i%2*2-1)*2.+1., 1.);\n}"),d=[0,1].map((t=>[a,a,c].map((t=>function(t,r,o,a){const c=n.createTexture();return n.bindTexture(e,c),n.texImage2D(e,0,o[2]||o[1],t,r,0,o[1],o[0],a),c.fmt=o,n.texParameteri(e,10241,9728),n.texParameteri(e,10240,9728),n.bindTexture(e,null),c}(800,800,t))))),g=d.map((r=>function(r){const o=n.createFramebuffer();n.bindFramebuffer(t,o);for(let o=0;o<r.length;o++){let a=r[o].fmt&&r[o].fmt[1],c=34041==a?33306:6402==a?36096:36064+o;n.framebufferTexture2D(t,c,e,r[o],0)}return n.bindFramebuffer(t,null),o}(r))),p=0,h=o(s,r(35632,`${m}\n${v}`)),y=x(h),b=o(s,r(35632,l)),w=x(b);function T(){n.useProgram(h),y.t(p),n.bindFramebuffer(t,g[1]),n.drawBuffers([36064,36065]),n.clear(256),i(),n.useProgram(b),function(t,r){for(let o=0;o<t.length;o++)n.activeTexture(n.TEXTURE0+o),r[o](o),n.bindTexture(e,t[o])}(d[1],[w.T0,w.T1,w.Depth]),n.bindFramebuffer(t,null),i(),g=g.reverse(),d=d.reverse(),p++}window.onclick=T,T()})();